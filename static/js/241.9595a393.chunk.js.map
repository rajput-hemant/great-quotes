{"version":3,"file":"static/js/241.9595a393.chunk.js","mappings":"8MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACb,OAAO,gBAAKC,UAAWC,EAAY,SAAEF,EAAMG,UAC5C,ECHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2B,SCmEnI,EA7DkB,SAACH,GAClB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAC1BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAmBrB,OACC,iCACC,SAAC,KAAM,CACNE,KAAML,EACNM,QAAS,SAACC,GAAQ,MACjB,qEAAqE,KAGvE,SAAC,EAAI,WACJ,kBACCX,UAAWC,EACXW,QAfqB,WACxBP,GAAc,EACf,EAcIQ,SA7BsB,SAACC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAEzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAsBgC,UAE3BpB,EAAMwB,YACN,gBAAKvB,UAAWC,EAAe,UAC9B,SAACuB,EAAA,EAAc,OAIjB,iBAAKxB,UAAWC,EAAe,WAC9B,kBAAOwB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,QAErC,iBAAKN,UAAWC,EAAe,WAC9B,kBAAOwB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,QAEnC,gBAAKR,UAAWC,EAAe,UAC9B,mBAAQ6B,QArCiB,WAC7BzB,GAAc,EACf,EAmC6CL,UAAU,MAAK,gCAQ7D,ECxCA,EAnBiB,WAChB,IAAM+B,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,UAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,QAErBC,EAAAA,EAAAA,YAAU,WACM,cAAXD,GACHL,EAAQO,KAAK,UAEf,GAAG,CAACF,EAAQL,IAMZ,OACC,SAAC,EAAS,CAACR,UAAsB,YAAXa,EAAsBhB,WALrB,SAACmB,GACxBJ,EAAYI,EACb,GAKD,C","sources":["webpack://great-quotes/./src/components/UI/Card.module.css?26d0","components/UI/Card.jsx","webpack://great-quotes/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.jsx","pages/NewQuote.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import styles from \"./Card.module.css\";\n\nconst Card = (props) => {\n\treturn <div className={styles.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport styles from \"./QuoteForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst QuoteForm = (props) => {\n\tconst [isEntering, setIsEntering] = useState(false);\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\tprops.onAddQuote({ author: enteredAuthor, text: enteredText });\n\t};\n\n\tconst finishEnteringHandler = () => {\n\t\tsetIsEntering(false);\n\t};\n\n\tconst formFocusHandler = () => {\n\t\tsetIsEntering(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Prompt\n\t\t\t\twhen={isEntering}\n\t\t\t\tmessage={(location) =>\n\t\t\t\t\t\"Are you sure you want to leave? All your entered data will be lost!\"\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Card>\n\t\t\t\t<form\n\t\t\t\t\tclassName={styles.form}\n\t\t\t\t\tonFocus={formFocusHandler}\n\t\t\t\t\tonSubmit={submitFormHandler}\n\t\t\t\t>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={styles.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={styles.control}>\n\t\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"author\" ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.control}>\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t\t<textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.actions}>\n\t\t\t\t\t\t<button onClick={finishEnteringHandler} className=\"btn\">\n\t\t\t\t\t\t\tAdd Quote\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</>\n\t);\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport api from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nconst NewQuote = () => {\n\tconst history = useHistory();\n\tconst { sendRequest, status } = useHttp(api.addQuote);\n\n\tuseEffect(() => {\n\t\tif (status === \"completed\") {\n\t\t\thistory.push(\"/quotes\");\n\t\t}\n\t}, [status, history]);\n\n\tconst addQuoteHandler = (quoteData) => {\n\t\tsendRequest(quoteData);\n\t};\n\n\treturn (\n\t\t<QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n\t);\n};\n\nexport default NewQuote;\n"],"names":["props","className","styles","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","useHttp","api","sendRequest","status","useEffect","push","quoteData"],"sourceRoot":""}