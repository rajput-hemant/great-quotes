{"version":3,"file":"static/js/815.e9445ac2.chunk.js","mappings":"8MACA,EAAuB,wB,SCmBvB,EAhBkB,SAACA,GAClB,OACC,gBAAIC,UAAWC,EAAY,WAC1B,+BACC,iCACC,uBAAIF,EAAMG,UAEX,gCAAaH,EAAMI,aAEpB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,+BAKnD,ECjBA,EAAuB,wBAAvB,EAAyD,2BCiDzD,EAnCkB,SAACN,GAClB,IAXmBO,EAAQC,EAWrBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAwC,QAD1B,IAAIC,gBAAgBH,EAASI,QACnBC,IAAI,QAC5BC,GAfaV,EAeaP,EAAMO,OAfXC,EAemBK,EAdvCN,EAAOW,MAAK,SAACC,EAAGC,GACtB,OAAIZ,EACIW,EAAEb,GAAKc,EAAEd,GAAK,GAAK,EAEnBa,EAAEb,GAAKc,EAAEd,GAAK,GAAK,CAE5B,KAiBA,OACC,iCACC,gBAAKL,UAAWC,EAAe,UAC9B,oBAAQmB,QAVe,WACzBZ,EAAQa,KAAK,CACZC,SAAUZ,EAASY,SACnBR,OAAO,QAAD,OAAUF,EAAY,OAAS,QAEvC,EAKsC,kBAC5BA,EAAY,aAAe,kBAGnC,eAAIZ,UAAWC,EAAY,SACzBe,EAAaO,KAAI,SAACC,GAAK,OACvB,SAAC,EAAS,CAETnB,GAAImB,EAAMnB,GACVF,OAAQqB,EAAMrB,OACdD,KAAMsB,EAAMtB,MAHPsB,EAAMnB,GAIV,QAKP,E,SC/CA,EAA2B,gCCc3B,EAXsB,WACrB,OACC,iBAAKL,UAAWC,EAAgB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,2BAKxC,ECyBA,EA9BkB,WACjB,OAKIqB,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,cAAkB,GAJ7BC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAY,EAAlBC,KACAC,EAAK,EAALA,MAOD,OAJAC,EAAAA,EAAAA,YAAU,WACTL,GACD,GAAG,CAACA,IAEW,YAAXC,GAEF,gBAAK5B,UAAU,WAAU,UACxB,SAACiC,EAAA,EAAc,MAKdF,GACI,cAAG/B,UAAU,mBAAkB,SAAE+B,IAG1B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAGtD,SAAC,EAAS,CAAC5B,OAAQuB,KAFlB,SAAC,EAAa,GAGvB,C","sources":["webpack://great-quotes/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.jsx","webpack://great-quotes/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.jsx","webpack://great-quotes/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.jsx","pages/AllQuotes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { Link } from \"react-router-dom\";\n\nimport styles from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n\treturn (\n\t\t<li className={styles.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link className=\"btn\" to={`/quotes/${props.id}`}>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport styles from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n\treturn quotes.sort((a, b) => {\n\t\tif (ascending) {\n\t\t\treturn a.id > b.id ? 1 : -1;\n\t\t} else {\n\t\t\treturn a.id < b.id ? 1 : -1;\n\t\t}\n\t});\n};\n\nconst QuoteList = (props) => {\n\tconst history = useHistory();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst isSortAsc = queryParams.get(\"sort\") === \"asc\";\n\tconst sortedQuotes = sortQuotes(props.quotes, isSortAsc);\n\n\tconst changeSortHandler = () => {\n\t\thistory.push({\n\t\t\tpathname: location.pathname,\n\t\t\tsearch: `sort=${isSortAsc ? \"desc\" : \"asc\"}`,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.sorting}>\n\t\t\t\t<button onClick={changeSortHandler}>\n\t\t\t\t\tSort {isSortAsc ? \"Descending\" : \"Ascending\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul className={styles.list}>\n\t\t\t\t{sortedQuotes.map((quote) => (\n\t\t\t\t\t<QuoteItem\n\t\t\t\t\t\tkey={quote.id}\n\t\t\t\t\t\tid={quote.id}\n\t\t\t\t\t\tauthor={quote.author}\n\t\t\t\t\t\ttext={quote.text}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from \"react-router-dom\";\n\nimport styles from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={styles.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link className=\"btn\" to=\"/new-quote\">\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\n\nimport api from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n\tconst {\n\t\tsendRequest,\n\t\tstatus,\n\t\tdata: loadedQuotes,\n\t\terror,\n\t} = useHttp(api.getAllQuotes, true);\n\n\tuseEffect(() => {\n\t\tsendRequest();\n\t}, [sendRequest]);\n\n\tif (status === \"pending\") {\n\t\treturn (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (error) {\n\t\treturn <p className=\"centered focused\">{error}</p>;\n\t}\n\n\tif (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n\t\treturn <NoQuotesFound />;\n\t}\n\treturn <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"names":["props","className","styles","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortAsc","URLSearchParams","search","get","sortedQuotes","sort","a","b","onClick","push","pathname","map","quote","useHttp","api","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}